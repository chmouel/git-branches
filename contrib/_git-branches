#compdef git-branches po

local worktree_dir=${HOME}/git/pac/trees

local ret=1
_arguments -C : \
    '1:worktree:->worktree' && return 0

case $state in
    worktree)
        local -a profiles descrs
        local repo branch msg
        profiles=( "$worktree_dir"/*(/:t) )
        for p in $profiles; do
            repo="$worktree_dir/$p"
            if [[ -e "$repo/.git" ]] || git -C "$repo" rev-parse --is-inside-work-tree &>/dev/null; then
                branch=$(git -C "$repo" symbolic-ref --short HEAD 2>/dev/null || git -C "$repo" rev-parse --short HEAD 2>/dev/null)
                branch=${branch//$'\n'/}
                msg=$(git -C "$repo" log -1 --pretty=%s 2>/dev/null)
                msg=${msg//$'\n'/}
                # leave room: "[branch] -- " ~ length(branch)+6
                integer room; room=$COLUMNS
                (( room = room - ${#branch} - 6 ))
                (( room < 10 )) && room=10
                if (( ${#msg} > room )); then
                    msg="${msg[1,room]}â€¦"
                fi
                descrs+=( "$p:[${branch}] -- $msg" )
            else
                descrs+=( "$p:$repo" )
            fi
        done
        _describe -t worktrees 'worktrees' descrs && ret=0
        ;;
esac

return ret
